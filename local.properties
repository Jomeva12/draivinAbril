## This file must *NOT* be checked into Version Control Systems,
# as it contains information specific to your local configuration.
#
# Location of the SDK. This is only used by Gradle.
# For customization when using a Version Control System, please read the
# header note.
#Fri Oct 28 12:29:33 COT 2022
super.onPause()=
//11.016633236072572,-74.23425301909447=
ActualizarCiudad()=
//upDateOnline(true)=
when=(it.itemId) {
usuarios.uid=mAuth.uid.toString()
else=-> {
popup.show()=
Log.d("tituloHome",="x")
viewPager.adapter=fragmentAdapter
if=(mAuth.currentUser.uid \!\= null) {
val=`val` \= p.waitFor()
mAuth.signOut()=
var=item \= viewPager.currentItem
popup.setOnMenuItemClickListener={
)=
ViewedMessageHelper().updateOnline(true,=this)
*=*/
unregisterReceiver(mNetworkChangeListener)=
.error(R.drawable.ic_person_azul).into(menuCardHome)=
0=
tabLayout.setupWithViewPager(viewPager)=
//nota=poner cargando mientras actualiza y trae los datos
Ciudades.setCiudadUsuario("General")=
Ciudades.setCiudadUsuario(ciudad.toString())=
preference.edit={
ViewedMessageHelper().updateOnline(false,=this)
menuCardHome.setOnClickListener={
R.id.configReport=-> {
mFragmentOne=FragmentOne()
alertDialog.dismiss()=
usuarios.ciudad=ciudad.toString()
//Ac\u00E1=debe guardar la ciudad que me traigo de fragment 1
Log.d("posicion",="$item")
Picasso.get().load(foto)=
v.listaCiudades.adapter=adapter
lateinit=var mNetworkChangeListener\: NetWorkListenerKotlin
override=fun onPause() {
actualizarPerfilSinoExist(ciudadUser)=
//actualizar=el swip
//conexion=a internet
PreferenceManager.getDefaultSharedPreferences(this)=
super.onStop()=
Ciudades.setCiudadUsuario(ciudadUser)=
builder.setCancelable(true)=
R.id.itemPerfil=-> {
mLista=arrayListOf()
/**/=
mtokenProvider=TokenProvider()
v.listaCiudades.setOnItemClickListener={ parent, view, position, id ->
Log.d("Home=Ciudad->3", ciudadUser)
}=
crearToken(mAuth.currentUser.uid.toString())=
spanString.setSpan(=
fun=isOnlineNet()\: Boolean {
return=false
Log.d("atento3",="->")
super.onCreate(savedInstanceState)=
actualizarPerfil(parent.getItemAtPosition(position),=alertDialog, mView)
mtokenProvider.crearToken(idUser)=
R.id.cambiarCiudad=-> {
mFragmentOne.setMyCiudad(this)=
finish()*/=
//debo=poner un disparador para que elusuario recuerde activar su ciudad
inflater.inflate(R.menu.menu,=popup.menu)
mView=v
Toast.makeText(this,="No se pudo actualizar", Toast.LENGTH_SHORT).show()
lista=ListView(this)
return@setOnMenuItemClickListener=true
mMessagesProvider=MessagesProvider()
package=com.example.driving.activities.activities
this.putString("ciudadUser",=ciudadUser)
super.onStart()=
Log.d("disparado",="1")
@RequiresApi(Build.VERSION_CODES.N)=
startActivity(intent)=
mAuth=FirebaseAuth.getInstance()
AlertDialog.Builder(this\!\!)=
//voy=por ac\u00E1
item.title=spanString
mUserProviders.upDateCiudad(usuarios).addOnCompleteListener={
ciudad=it.getString("ciudad")
try={
ForegroundColorSpan(getColor(R.color.white)),=
private=fun crearToken(idUser\: String) {
ciudadUser=ciudad.toString()
import=android.view.*
setContentView(R.layout.activity_home)=
for=(i in 0 until popup.menu.size()) {
mUserProviders.updateOnline(mAuth.currentUser.uid,=status)
/*val=intent \= Intent(this, AuthActivity\:\:class.java)
spanString.length,=
mUserProviders=UserProviders()
sdk.dir=C\:\\Users\\MELENDEZ\\AppData\\Local\\Android\\Sdk
public=fun alertaLike() {
R.layout.list_item_ciudad,=
registerReceiver(mNetworkChangeListener,filter)=
setSupportActionBar(toolbar)=
/*=val mFragmentOne\=FragmentOne()
mNetworkChangeListener=NetWorkListenerKotlin()
class=HomeActivity \: AppCompatActivity() {
this,=
ubicacion.text="$ciudad."
ciudades=
//=TODO Auto-generated catch block
tituloHome()=
.show()=
alertDialog.show()=
this.apply()=
//val=inflater \= layoutInflater
mUserProviders.getUsuario(mAuth.uid.toString()).addOnSuccessListener={
e.printStackTrace()=
0,=
v.cancelar.setOnClickListener={
alertDialog=builder.create()
builder.setView(v)=
